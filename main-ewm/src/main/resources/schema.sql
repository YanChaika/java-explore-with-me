--DROP TABLE IF EXISTS PUBLIC.categories;
CREATE TABLE IF NOT EXISTS PUBLIC.categories (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	name VARCHAR(255) NOT NULL,
	CONSTRAINT pk_category PRIMARY KEY (id),
	CONSTRAINT uq_category_name UNIQUE (name)
);

--DROP TABLE IF EXISTS PUBLIC.locations;
CREATE TABLE IF NOT EXISTS PUBLIC.locations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	lat FLOAT,
	lon FLOAT,
	CONSTRAINT pk_location PRIMARY KEY (id)
);

--DROP TABLE IF EXISTS PUBLIC.users;
CREATE TABLE IF NOT EXISTS PUBLIC.users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	name VARCHAR(255) NOT NULL,
	email VARCHAR(512) NOT NULL,
	CONSTRAINT pk_user PRIMARY KEY (id),
	CONSTRAINT uq_user_email UNIQUE (email)
);

--DROP TABLE IF EXISTS PUBLIC.compilations;
CREATE TABLE IF NOT EXISTS PUBLIC.compilations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	title VARCHAR(500) NOT NULL,
	pinned BOOLEAN,
	--event_id BIGINT,
	CONSTRAINT pk_compilation PRIMARY KEY (id),
	CONSTRAINT uq_compilation_title UNIQUE (title)
);

--DROP TABLE IF EXISTS PUBLIC.events;
CREATE TABLE IF NOT EXISTS PUBLIC.events (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    annotation VARCHAR(2000),
	category_id BIGINT,
	confirmed_requests BIGINT,
	event_date TIMESTAMP WITHOUT TIME ZONE,
    initiator_id BIGINT,
    paid BOOLEAN,
    title VARCHAR(500),
    views BIGINT,
    created_on TIMESTAMP WITHOUT TIME ZONE,
    description VARCHAR(7000),
    location_id BIGINT,
    participant_limit BIGINT,
    participant_count BIGINT,
    published_on TIMESTAMP WITHOUT TIME ZONE,
    request_moderation BOOLEAN,
    state VARCHAR(255),
    compilation_id BIGINT,
	CONSTRAINT pk_event PRIMARY KEY (id),
	--CONSTRAINT fk_category FOREIGN KEY (id) REFERENCES PUBLIC.categories(id),
	CONSTRAINT fk_initiator FOREIGN KEY (initiator_id) REFERENCES PUBLIC.users(id),
	CONSTRAINT fk_location FOREIGN KEY (location_id) REFERENCES PUBLIC.locations(id)
);

--DROP TABLE IF EXISTS PUBLIC.requests;
CREATE TABLE IF NOT EXISTS PUBLIC.requests (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created TIMESTAMP WITHOUT TIME ZONE,
    event_id BIGINT,
    requester_id BIGINT,
    status VARCHAR(100),
    CONSTRAINT pk_request PRIMARY KEY (id),
	CONSTRAINT fk_event FOREIGN KEY (event_id) REFERENCES PUBLIC.events(id)
);

--DROP TABLE IF EXISTS PUBLIC.comments;
CREATE TABLE IF NOT EXISTS PUBLIC.comments (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    text VARCHAR(500),
    event_id BIGINT,
    author_id BIGINT,
    created TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_comments PRIMARY KEY (id)
);